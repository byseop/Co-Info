{"version":3,"sources":["components/CoInfo.js","components/CoInfoContainer.js","components/CurrnetPrice.js","components/Coin.js","components/CoinList.js","components/CoinListContainer.js","components/List.js","components/ListContainer.js","components/Charts.js","stores/charts.js","components/ChartContainer.js","App.js","serviceWorker.js","stores/marketStore.js","stores/API_QUERY.js","index.js","stores/index.js"],"names":["CoInfo","_ref","chart","list","react_default","a","createElement","className","CoInfoContainer","inject","observer","getMarketCode","this","props","marketStore","_this$props","components_CoInfo","Component","CurrnetPrice","beforePrice","changeStyle","border","nextProps","nextState","price","market","console","log","concat","Coin","tick","change","changePrice","changeRate","isChange","handleClick","_this","changingChart","prevProps","prevState","snapshot","_this$props2","tickPrice","currentPrice","length","coinInfoArr","find","info","undefined","trade_price","change_price","change_rate","toLocaleString","toFixed","prevCoinPrice","_this$props3","korean_name","onClick","CurrnetPrice_CurrnetPrice","defaultProps","CoinList","selectedMarketCode","map","coin","Coin_Coin","Object","assign","key","english_name","CoinListContainer","renderCoinList","arguments","components_CoinList","refreshingCurrentPrice","setInterval","Fragment","List","selectedMarket","marketSelect","e","target","id","src_components_CoinListContainer","_ref2","components_List","Charts","candles","data","ohlc","volume","dataLength","i","push","Date","candle_date_time_kst","getTime","opening_price","high_price","low_price","candle_acc_trade_volume","Highcharts","stockChart","animation","yAxis","labels","align","height","resize","enabled","top","offset","tooltip","shape","headerShape","borderWidth","shadow","positioner","width","point","isHeader","x","Math","max","plotLeft","min","plotX","chartWidth","marginRight","y","plotY","series","plotTop","type","name","responsive","rules","condition","maxWidth","chartOptions","rangeSelector","inputEnabled","drawingChart","slice","reverse","ChartContainer","showedCandles","_this$props$marketSto","getCandles","refreshingCandles","_this2","Charts_Charts","renderChart","App","src_components_CoInfoContainer","src_components_ChartContainer","components_ListContainer","Boolean","window","location","hostname","match","configure","enforceActions","root","classCallCheck","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","flow","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","classify","isLoadedMarketCode","t0","stop","bind","_descriptor6","_descriptor7","_descriptor8","_descriptor9","allMarket","classifyKrw","classifyBtc","classifyEth","classifyUsdt","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","callCurrentPrice","_callee2","_context2","isLoadCurrentPrice","callTickerLink","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_callee3","_context3","isLoadedCandles","candleLink","_descriptor24","observable","action","krwMarket","filter","split","_this3","btcMarket","_this4","ethMarket","_this5","usdtMarket","code","_this6","substr","_this7","_this8","_this9","candleMin","candleMarket","candleCount","_this10","RootStore","ReactDOM","render","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d7a253e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CoInfo = ({ chart, list }) => {\r\n  return (\r\n    <div className=\"CoInfo\">\r\n      <div className=\"inner\">\r\n        <div className=\"Chart\">{chart}</div>\r\n        <div className=\"List\">{list}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoInfo;\r\n","import React, { Component } from 'react';\r\nimport CoInfo from './CoInfo';\r\nimport { observer, inject } from 'mobx-react';\r\nimport './CoInfoContainer.css';\r\n\r\n@inject('marketStore')\r\n@observer\r\nclass CoInfoContainer extends Component {\r\n  componentDidMount() {\r\n    const { getMarketCode } = this.props.marketStore;\r\n    getMarketCode();\r\n  }\r\n\r\n  render() {\r\n    const { list, chart } = this.props;\r\n    return <CoInfo chart={chart} list={list} />;\r\n  }\r\n}\r\n\r\nexport default CoInfoContainer;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class CurrnetPrice extends Component {\r\n  beforePrice = 0;\r\n  changeStyle={\r\n    'border': '1px solid #000'\r\n  };\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { price } = this.props;\r\n    // console.log('현재값: '+price)\r\n    // console.log('비교값: '+nextProps.price)\r\n    if (nextProps.price === price) {\r\n      this.beforePrice = price;\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  render() {\r\n    const { price, market } = this.props;\r\n    console.log(`UPDATE: ${market} price, ${this.beforePrice} -> ${price}`);\r\n    return <span className=\"tick_price\">{price}</span>\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport CurrentPrice from './CurrnetPrice';\r\n\r\nexport default class Coin extends Component {\r\n  tick = 0;\r\n  change;\r\n  changePrice;\r\n  changeRate;\r\n  isChange = false;\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { market, tickPrice, currentPrice } = this.props;\r\n\r\n    if (\r\n      prevProps.currentPrice !== currentPrice &&\r\n      prevProps.tickPrice !== tickPrice &&\r\n      currentPrice.length === tickPrice.length\r\n    ) {\r\n      if (\r\n        currentPrice.length > 0 &&\r\n        tickPrice.length > 0 &&\r\n        currentPrice === tickPrice\r\n      ) {\r\n        const coinInfoArr = tickPrice.find(info => info.market === market);\r\n        if (coinInfoArr !== undefined) {\r\n          const {\r\n            trade_price,\r\n            change,\r\n            change_price,\r\n            change_rate\r\n          } = coinInfoArr;\r\n          if (trade_price > 1) {\r\n            this.tick = trade_price.toLocaleString();\r\n          } else {\r\n            this.tick = trade_price.toFixed(4);\r\n          }\r\n          if (change === 'RISE' || change === 'EVEN') {\r\n            this.changePrice = '+' + change_price;\r\n            this.changeRate = '+' + (change_rate * 100).toFixed(2);\r\n          } else if (change === 'FALL') {\r\n            this.changePrice = -change_price;\r\n            this.changeRate = -(change_rate * 100).toFixed(2);\r\n          }\r\n          if (prevProps.tickPrice.length > 0) {\r\n            // const prevCoinPrice = prevProps.tickPrice.find(info => info.market === market).trade_price;\r\n            const prevCoinPrice = prevProps.tickPrice.find(info => info.market === market);\r\n            if (prevCoinPrice !== undefined) {\r\n              if (trade_price !== prevCoinPrice.trade_price) {\r\n                this.isChange = true;\r\n              }\r\n              else this.isChange = false;\r\n            }\r\n          }\r\n          this.change = change;\r\n        }\r\n      } else {\r\n        this.tick = this.tick;\r\n        this.change = this.change;\r\n        this.changePrice = this.changePrice;\r\n      }\r\n    }\r\n  }\r\n  handleClick = () => {\r\n    const { changingChart, market } = this.props;\r\n    changingChart(market);\r\n  }\r\n  render() {\r\n    const { korean_name, market } = this.props;\r\n    return (\r\n      <div className=\"c_list\" onClick={this.handleClick}>\r\n        <div>\r\n          <div className=\"korean_name\">{korean_name}</div>\r\n          <div className=\"market_name\">{market}</div>\r\n        </div>\r\n        <div className={`tick ${this.isChange === true ? 'changed' : ''}`}>\r\n          <CurrentPrice price={this.tick} market={market} />\r\n        </div>\r\n        <div className=\"change\">\r\n          <span\r\n            className={`change_price ${this.change}`}\r\n          >\r\n            {this.changePrice} ({this.changeRate}%)\r\n            {`\r\n              ${this.change === 'RISE' ? '▲' : ''}\r\n              ${this.change === 'FALL' ? '▼' : ''}\r\n            `}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nCoin.defaultProps = {\r\n  korean_name: 'Coin Name',\r\n  market: 'Market',\r\n  price: 'Price'\r\n};\r\n","import React from 'react';\r\nimport Coin from './Coin';\r\n\r\nconst CoinList = ({ selectedMarketCode, tickPrice, currentPrice, changingChart }) => {\r\n  const list = selectedMarketCode.map(coin => {\r\n    return <Coin key={coin.english_name} {...coin} tickPrice={tickPrice} currentPrice={currentPrice} changingChart={changingChart} />\r\n  })\r\n  \r\n  return (\r\n    <div className=\"coin_list_inner\">{list}</div>\r\n  );\r\n};\r\n\r\nexport default CoinList;\r\n","import React, { Component } from 'react'\r\nimport CoinList from './CoinList';\r\nimport './CoinListContainer.css';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\n\r\n@inject('marketStore')\r\n@observer\r\nclass CoinListContainer extends Component {\r\n  componentDidMount() {\r\n    const { refreshingCurrentPrice } = this.props.marketStore;\r\n    setInterval(function() {\r\n      refreshingCurrentPrice(); // 실시간시세 업데이트\r\n    }, 400)\r\n  }\r\n  renderCoinList = ({ selectedMarketCode, currentPrice, tickPrice, changingChart } = this.props.marketStore) => {\r\n    return <CoinList selectedMarketCode={selectedMarketCode} currentPrice={currentPrice} tickPrice={tickPrice} changingChart={changingChart} />\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"title\">실시간 시세</div>\r\n        {this.renderCoinList()}\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default CoinListContainer;","import React from 'react';\r\nimport CoinListContainer from './CoinListContainer';\r\n\r\nconst List = ({ selectedMarket, marketSelect }) => {\r\n  const handleClick = (e) => {\r\n    marketSelect(e.target.id);\r\n  }\r\n  return (\r\n    <>\r\n      <div className='type'>\r\n        <div className={`type_list ${selectedMarket === 'KRW' ? 'on' : ''}`}><h3 id='KRW' onClick={handleClick}>원화거래</h3></div>\r\n        <div className={`type_list ${selectedMarket === 'BTC' ? 'on' : ''}`}><h3 id='BTC' onClick={handleClick}>BTC</h3></div>\r\n        <div className={`type_list ${selectedMarket === 'ETH' ? 'on' : ''}`}><h3 id='ETH' onClick={handleClick}>ETH</h3></div>\r\n        <div className={`type_list ${selectedMarket === 'USDT' ? 'on' : ''}`}><h3 id='USDT' onClick={handleClick}>USDT</h3></div>\r\n      </div>\r\n      <div className='Coin_List'>\r\n        <CoinListContainer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport List from './List';\r\nimport { observer, inject } from 'mobx-react';\r\nimport './ListContainer.css';\r\n\r\nconst ListConatiner = ({ selectedMarket, marketSelect }) => {\r\n  return <List selectedMarket={selectedMarket} marketSelect={marketSelect} />;\r\n};\r\n\r\nexport default inject(({ marketStore }) => ({\r\n  selectedMarket: marketStore.selectedMarket,\r\n  marketSelect: marketStore.marketSelect,\r\n}))(observer(ListConatiner));\r\n","import React, { Component } from 'react';\r\nimport { drawingChart } from '../stores/charts';\r\n\r\nexport default class Charts extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { candles } = this.props;\r\n    if (nextProps.candles !== candles) {\r\n      if (candles !== undefined) {\r\n        const nextPrice = nextProps.candles[0].trade_price;\r\n        const currentPrice = candles[0].trade_price;\r\n        if (nextPrice !== currentPrice) {\r\n          // console.log(nextPrice, currentPrice);\r\n          // console.log(candles)\r\n          console.log('UPDATE: Chart changing observed and Update')\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    // return false;\r\n  }\r\n  render() {\r\n    const { candles } = this.props;\r\n    if (candles !== undefined) {\r\n      drawingChart(candles.slice().reverse());\r\n    }\r\n    return <div className=\"chart_wrap\" id=\"chartBox\" />;\r\n  }\r\n}","export const drawingChart = (data) => {\r\n  // split the data set into ohlc and volume\r\n  var ohlc = [],\r\n    volume = [],\r\n    dataLength = data.length,\r\n    i = 0;\r\n    \r\n  for (i; i < dataLength; i += 1) {\r\n    ohlc.push([\r\n      new Date(data[i].candle_date_time_kst).getTime(), // the date\r\n      data[i].opening_price, // open\r\n      data[i].high_price, // high\r\n      data[i].low_price, // low\r\n      data[i].trade_price // close\r\n    ]);\r\n\r\n    volume.push([\r\n      new Date(data[i].candle_date_time_kst).getTime(), // the date\r\n      data[i].candle_acc_trade_volume // the volume\r\n    ]);\r\n  }\r\n\r\n  /* eslint-disable-next-line */\r\n  Highcharts.stockChart('chartBox', {\r\n    chart: {\r\n      animation: false\r\n    },\r\n    yAxis: [\r\n      {\r\n        labels: {\r\n          align: 'left'\r\n        },\r\n        height: '80%',\r\n        resize: {\r\n          enabled: true\r\n        }\r\n      },\r\n      {\r\n        labels: {\r\n          align: 'left'\r\n        },\r\n        top: '80%',\r\n        height: '20%',\r\n        offset: 0\r\n      }\r\n    ],\r\n    tooltip: {\r\n      shape: 'square',\r\n      headerShape: 'callout',\r\n      borderWidth: 0,\r\n      shadow: false,\r\n      positioner: function(width, height, point) {\r\n        var chart = this.chart,\r\n          position;\r\n\r\n        if (point.isHeader) {\r\n          position = {\r\n            x: Math.max(\r\n              // Left side limit\r\n              chart.plotLeft,\r\n              Math.min(\r\n                point.plotX + chart.plotLeft - width / 2,\r\n                // Right side limit\r\n                chart.chartWidth - width - chart.marginRight\r\n              )\r\n            ),\r\n            y: point.plotY\r\n          };\r\n        } else {\r\n          position = {\r\n            x: point.series.chart.plotLeft,\r\n            y: point.series.yAxis.top - chart.plotTop\r\n          };\r\n        }\r\n\r\n        return position;\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        type: 'ohlc',\r\n        id: data[0].market,\r\n        name: data[0].market,\r\n        data: ohlc\r\n      },\r\n      {\r\n        type: 'column',\r\n        id: 'volume',\r\n        name: 'Volume',\r\n        data: volume,\r\n        yAxis: 1\r\n      }\r\n    ],\r\n    responsive: {\r\n      rules: [\r\n        {\r\n          condition: {\r\n            maxWidth: 800\r\n          },\r\n          chartOptions: {\r\n            rangeSelector: {\r\n              inputEnabled: false\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  });\r\n}\r\n","import React, { Component } from 'react'\r\nimport  { inject, observer } from 'mobx-react'\r\nimport Chart from './Charts';\r\nimport './ChartContainer.css'\r\n\r\n@inject('marketStore')\r\n@observer\r\nclass ChartContainer extends Component {\r\n  showedCandles = [];\r\n  componentDidMount() {\r\n    const { getCandles, refreshingCandles } = this.props.marketStore;\r\n    getCandles();\r\n    setInterval(() => {\r\n      refreshingCandles();\r\n    }, 400);\r\n  }\r\n  render() {\r\n    const { candles } = this.props.marketStore;\r\n    const renderChart = () => {\r\n      if (candles.length > 0) {\r\n        return this.showedCandles = candles;\r\n      }\r\n    }\r\n    return <Chart candles={renderChart()} />\r\n  }\r\n}\r\n\r\nexport default ChartContainer;\r\n","import React, { Component } from 'react';\nimport CoInfoContainer from './components/CoInfoContainer';\nimport ListContainer from './components/ListContainer';\nimport ChartContainer from './components/ChartContainer';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return <CoInfoContainer chart={<ChartContainer />} list={<ListContainer />} />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, flow, configure, action } from 'mobx';\r\nimport axios from 'axios';\r\nimport { MARKET_CODE_URL } from './API_QUERY';\r\n\r\nconfigure({ enforceActions: 'observed' });\r\n\r\nexport default class marketStore {\r\n  constructor(root) {\r\n    this.root = root;\r\n  }\r\n\r\n  // 최초 페이지 로드시 마켓코드 동기화\r\n  @observable isLoadedMarketCode = 'pending';\r\n  @observable krwMarket = [];\r\n  @observable btcMarket = [];\r\n  @observable ethMarket = [];\r\n  @observable usdtMarket = [];\r\n  \r\n  getMarketCode = flow(function*() {\r\n    try {\r\n      const response = yield axios.get(MARKET_CODE_URL);\r\n      const data = response.data;\r\n      this.classify(data);\r\n      yield this.marketSelect('KRW');\r\n      this.isLoadedMarketCode = 'done';\r\n    }\r\n    catch (error) {\r\n      this.isLoadedMarketCode = 'error';\r\n    }\r\n  });\r\n  getMarketCode = this.getMarketCode.bind(this);\r\n\r\n  @action classifyKrw = allMarket => {\r\n    this.krwMarket = allMarket.filter(list => (\r\n      list.market.split('-')[0] === 'KRW'\r\n    ));\r\n  }\r\n  @action classifyBtc = allMarket => {\r\n    this.btcMarket = allMarket.filter(list => (\r\n      list.market.split('-')[0] === 'BTC'\r\n    ));\r\n  }\r\n  @action classifyEth = allMarket => {\r\n    this.ethMarket = allMarket.filter(list => (\r\n      list.market.split('-')[0] === 'ETH'\r\n    ));\r\n  }\r\n  @action classifyUsdt = allMarket => {\r\n    this.usdtMarket = allMarket.filter(list => (\r\n      list.market.split('-')[0] === 'USDT'\r\n    ));\r\n  }\r\n  classify = allMarket => {\r\n    this.classifyKrw(allMarket);\r\n    this.classifyBtc(allMarket);\r\n    this.classifyEth(allMarket);\r\n    this.classifyUsdt(allMarket);\r\n  }\r\n\r\n  // 마켓 탭\r\n  @observable selectedMarket = 'KRW'; // KRW, BTC, ETH, USDT\r\n  @observable selectedMarketCode = [];\r\n  @observable callTickerLink = 'https://api.upbit.com/v1/ticker?markets=';\r\n  @action marketSelect = code => {\r\n    if (code === 'KRW') {\r\n      this.selectedMarket = 'KRW'\r\n      this.selectedMarketCode = this.krwMarket;\r\n    }\r\n    else if (code === 'BTC') {\r\n      this.selectedMarket = 'BTC'\r\n      this.selectedMarketCode = this.btcMarket;\r\n    }\r\n    else if (code === 'ETH') {\r\n      this.selectedMarket = 'ETH'\r\n      this.selectedMarketCode = this.ethMarket;\r\n    }\r\n    else if (code === 'USDT') {\r\n      this.selectedMarket = 'USDT'\r\n      this.selectedMarketCode = this.usdtMarket;\r\n    }\r\n\r\n    this.callTickerLink = 'https://api.upbit.com/v1/ticker?markets=';\r\n\r\n    for (let i = 0; i < this.selectedMarketCode.length; i++) {\r\n      this.callTickerLink = this.callTickerLink + this.selectedMarketCode[i].market + ',';\r\n    }\r\n\r\n    this.callTickerLink = this.callTickerLink.substr(0, this.callTickerLink.length-1);\r\n    this.callCurrentPrice();\r\n  }\r\n\r\n  // 실시간 가격 정보\r\n  @observable currentPrice = [];\r\n  @observable isLoadCurrentPrice = 'pending';\r\n  tickPrice = [];\r\n  callCurrentPrice = flow(function*() {\r\n    // this.tickPrice = [];\r\n    this.currentPrice = [];\r\n    this.isLoadCurrentPrice = 'pending';\r\n    try {\r\n      const response = yield axios(this.callTickerLink);\r\n      const data = yield response.data;\r\n      this.currentPrice = data;\r\n      this.tickPrice = this.currentPrice;\r\n      this.isLoadCurrentPrice = 'done';\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.isLoadCurrentPrice = 'error';\r\n    }\r\n  });\r\n  callCurrentPrice = this.callCurrentPrice.bind(this);\r\n\r\n  // 실시간 업데이트\r\n  @action refreshingCurrentPrice = () => {\r\n    if (this.isLoadCurrentPrice === 'done') {\r\n      this.callCurrentPrice();\r\n    }\r\n  }\r\n  @action refreshingCandles = () => {\r\n    if (this.isLoadedCandles === 'done') {\r\n      this.getCandles();\r\n    }\r\n  }\r\n\r\n  @observable candles = [];\r\n  showedCandles = [];\r\n  @observable isLoadedCandles = 'pending';\r\n  @observable candleMin = 1;\r\n  @observable candleMarket = 'KRW-BTC';\r\n  @observable candleCount = '200';\r\n  @action candleLink = () => {\r\n    return `https://api.upbit.com/v1/candles/minutes/${this.candleMin}?market=${this.candleMarket}&count=${this.candleCount}`\r\n  } \r\n  getCandles = flow(function*() {\r\n    // this.candles = [];\r\n    this.isLoadedCandles = 'pending';\r\n    try {\r\n      const response = yield axios(this.candleLink());\r\n      const data = yield response.data;\r\n      this.candles = data;\r\n      this.showedCandles = this.candles;\r\n      this.isLoadedCandles = 'done';\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.isLoadedCandles = 'error';\r\n    }\r\n  });\r\n  getCandles = this.getCandles.bind(this);\r\n\r\n  @action changingChart = (market) => {\r\n    this.candleMarket = market;\r\n  }\r\n}","// 마켓코드\r\nexport const MARKET_CODE_URL = 'https://api.upbit.com/v1/market/all';\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'mobx-react';\nimport RootStore from '././stores';\n\nconst root = new RootStore();\n\nReactDOM.render(\n    <Provider {...root}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import marketStore from './marketStore';\r\n\r\nclass RootStore {\r\n  constructor() {\r\n    this.marketStore = new marketStore(this);\r\n  }\r\n}\r\n\r\nexport default RootStore;\r\n"],"sourceRoot":""}